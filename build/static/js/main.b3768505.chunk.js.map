{"version":3,"sources":["components/Signin.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","SignIn","state","email","password","classes","this","props","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","form","noValidate","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","value","debounceChange","type","FormControlLabel","control","Checkbox","Button","submit","onClick","Grid","container","item","xs","Box","mt","PureComponent","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","backgroundColor","palette","secondary","main","width","useStyles","makeStyles","icon","marginRight","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","footer","cards","Album","Fragment","AppBar","position","Toolbar","noWrap","gutterBottom","paragraph","justify","map","key","sm","md","Card","CardMedia","image","title","CardContent","CardActions","size","App","user","loggedIn","exact","path","render","renderProps","to","Signin","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3768505.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {\"Copyright Â© \"}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n    </Link>{\" \"}\n    {new Date().getFullYear()}\n    {\".\"}\n</Typography>\n);\n}\n\nconst styles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n});\n\nclass SignIn extends PureComponent {\n    state = {\n        email: \"\",\n        password: \"\"\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n        <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        autoComplete=\"email\"\n        autoFocus\n        onChange={({ target: { id, value } }) => {\n            this.debounceChange(id, value);\n        }}\n        />\n        <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n            />\n            <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={this.submit}\n            >\n            Sign In\n        </Button>\n        <Grid container>\n        <Grid item xs>\n        <Link href=\"#\" variant=\"body2\">\n            Forgot password?\n    </Link>\n        </Grid>\n        <Grid item>\n        <Link href=\"#\" variant=\"body2\">\n            {\"Don't have an account? Sign Up\"}\n            </Link>\n            </Grid>\n            </Grid>\n            </form>\n            </div>\n            <Box mt={8}>\n            <Copyright />\n            </Box>\n            </Container>\n    );\n    }\n}\n\nexport default withStyles(styles)(SignIn);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\n//import CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {\"Copyright Â© \"}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n    </Link>{\" \"}\n    {new Date().getFullYear()}\n    {\".\"}\n</Typography>\n);\n}\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        marginRight: theme.spacing(2)\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6)\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4)\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8)\n    },\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    cardMedia: {\n        paddingTop: \"56.25%\" // 16:9\n    },\n    cardContent: {\n        flexGrow: 1\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6)\n    }\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Album() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n        <Toolbar>\n        <EmojiEmotionsIcon className={classes.icon} />\n    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n    Movie layout\n    </Typography>\n    </Toolbar>\n    </AppBar>\n    <main>\n    {/* Hero unit */}\n    <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n        <Typography\n    component=\"h1\"\n    variant=\"h2\"\n    align=\"center\"\n    color=\"textPrimary\"\n    gutterBottom\n    >\n    Movie Album\n    </Typography>\n    <Typography\n    variant=\"h5\"\n    align=\"center\"\n    color=\"textSecondary\"\n    paragraph\n    >\n    100 must see films of all time\n    </Typography>\n    <div className={classes.heroButtons}>\n        <Grid container spacing={2} justify=\"center\">\n        <Grid item>\n    <Button variant=\"contained\" color=\"primary\">\n        Main call to action\n    </Button>\n    </Grid>\n    <Grid item>\n    <Button variant=\"outlined\" color=\"primary\">\n        Secondary action\n    </Button>\n    </Grid>\n    </Grid>\n    </div>\n    </Container>\n    </div>\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n        {cards.map(card => (\n                <Grid item key={card} xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n            <CardMedia\n            className={classes.cardMedia}\n            image=\"https://source.unsplash.com/random\"\n            title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Heading\n            </Typography>\n            <Typography>\n            This is a media card. You can use this section to describe\n            the content.\n                </Typography>\n                </CardContent>\n                <CardActions>\n                <Button size=\"small\" color=\"primary\">\n            View\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n            Edit\n            </Button>\n            </CardActions>\n            </Card>\n            </Grid>\n))}\n</Grid>\n    </Container>\n    </main>\n    {/* Footer */}\n<footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n    Footer\n    </Typography>\n    <Typography\n    variant=\"subtitle1\"\n    align=\"center\"\n    color=\"textSecondary\"\n    component=\"p\"\n        >\n        Something here to give the footer a purpose!\n    </Typography>\n    <Copyright />\n    </footer>\n    {/* End footer */}\n</React.Fragment>\n);\n}\n","import React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport Signin from \"./components/Signin\";\nimport Dashboard from \"./components/Dashboard\";\n\nclass App extends Component {\n    state = {\n        user: null,\n        loggedIn: true\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n            <Router>\n            <Switch>\n            <Route\n        exact\n        path=\"/\"\n        render={renderProps =>\n        this.state.loggedIn ? (\n            <Redirect to=\"/dashboard\" />\n    ) : (\n        <Redirect to=\"/login\" />\n    )\n    }\n        />\n        <Route\n        exact\n        path=\"/login\"\n        render={renderProps =>\n        this.state.loggedIn ? <Redirect to=\"/dashboard\" /> : <Signin />\n    }\n        />\n        <Route\n        exact\n        path=\"/dashboard\"\n        render={renderProps =>\n        !this.state.loggedIn ? <Redirect to=\"/login\" /> : <Dashboard />\n    }\n        />\n        </Switch>\n        </Router>\n        </div>\n    );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* global fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}